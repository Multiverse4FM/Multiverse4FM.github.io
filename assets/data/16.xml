<Think>
Alright, so I have this problem here where I need to find the greatest possible value of the difference between the sum of the second half of a sequence and the sum of the first half.
The sequence has 2n real numbers, and there's a condition that the sum of the squares of the differences between consecutive terms is equal to 1.
Let me try to break this down.
The problem states: Given real numbers a1, a2, ..., a2n such that the sum from i=1 to 2n−1 of (a_{i+1} − a_i)2 equals 1.
We need to maximize the value of (a_{n+1} + a_{n+2} + ... + a_{2n}) − (a1 + a2 + ... + a_n).
Let me denote the difference we're trying to maximize as D.
So, D = (Σ_{k=n+1}^{2n} a_k) − (Σ_{k=1}^n a_k).
To maximize this difference, I need to find the configuration of the sequence a1 to a2n where the later terms (from a_{n+1} to a2n) are as large as possible compared to the earlier terms (a1 to a_n), given the constraint on the sum of squared differences.
First, let me note that the constraint is on the sum of squared differences between consecutive terms.
That is, Σ_{i=1}^{2n−1} (a_{i+1} − a_i)2 = 1.
This reminds me of a quadratic form constraint, which in optimization problems often relates to using the Cauchy-Schwarz inequality or some form of Lagrange multipliers.
Since we're dealing with real numbers and quadratic constraints, maybe the Cauchy-Schwarz inequality is applicable here.
Let me recall that the Cauchy-Schwarz inequality states that for vectors u and v, (u·v)2 ≤ (u·u)(v·v).
But here, I need to relate the differences between consecutive terms to the difference D.
Maybe I can express D in terms of these differences.
Alternatively, perhaps this is a problem that can be modeled as a vector in Euclidean space, where the differences a_{i+1} − a_i are components of a vector, whose squared norm is 1.
Then, we want to find the maximum value of D under this constraint.
That might suggest using linear algebra and optimization techniques.
Let me try to write D in terms of the differences.
To do that, let's think of the sequence a1, a2, ..., a2n as a cumulative sum of the differences.
If I define the differences d_i = a_{i+1} − a_i for i=1, 2, ..., 2n−1, then the terms a_{k} can be expressed as a1 plus the sum of the differences up to d_{k−1}.
But this might get complicated.
Let's see:
Let’s express each term a_k in terms of a1 and the differences d_i.
a1 = a1
a2 = a1 + d1
a3 = a2 + d2 = a1 + d1 + d2
...
Generally, a_{k} = a1 + Σ_{i=1}^{k−1} d_i for k ≥ 2.
Now, the sum of the first n terms (which I will call S1) is a1 + a2 + ... + a_n = Σ_{k=1}^n a_k.
Let's think in parallel.
<Parallel>
<Goal>
<Outline>
1: Expression for the sum of the first n terms (S1) using a1 and differences d_i.
</Outline>
<Outline>
2: Expression for the sum of the second n terms (S2) using a1 and differences d_i, and the resulting difference D = S2 - S1.
</Outline>
</Goal>
<Path>
1: Substituting each term a_k in terms of a1 and the differences d_i (where a_k = a1 + Σ_{i=1}^{k−1} d_i for k ≥ 2), the sum of the first n terms is S1 = Σ_{k=1}^n a_k = Σ_{k=1}^n [a1 + Σ_{i=1}^{k−1} d_i]. This simplifies to S1 = n*a1 + Σ_{k=1}^n Σ_{i=1}^{k−1} d_i, which further simplifies by changing the order of summation to S1 = n*a1 + Σ_{i=1}^{n−1} (n − i) d_i.
</Path>
<Path>
2: The sum of the second n terms is S2 = Σ_{k=n+1}^{2n} a_k. Each term a_k for k from n+1 to 2n can be expressed using a1 and the differences d_i: a_{n+1} = a1 + Σ_{i=1}^{n} d_i, a_{n+2} = a1 + Σ_{i=1}^{n+1} d_i, and so on, up to a_{2n} = a1 + Σ_{i=1}^{2n−1} d_i. Thus, S2 = Σ_{k=n+1}^{2n} [a1 + Σ_{i=1}^{k−1} d_i]. This simplifies to S2 = n*a1 + Σ_{k=n+1}^{2n} Σ_{i=1}^{k−1} d_i.
The difference D is calculated as D = S2 - S1 = [n*a1 + Σ_{k=n+1}^{2n} Σ_{i=1}^{k−1} d_i] - [n*a1 + Σ_{i=1}^{n−1} (n − i) d_i].
</Path>
<Conclusion>
The sum of the first n terms is S1 = n*a1 + Σ_{i=1}^{n−1} (n − i) d_i, and the sum of the second n terms is S2 = n*a1 + Σ_{k=n+1}^{2n} Σ_{i=1}^{k−1} d_i. Subtracting S1 from S2 yields the difference D.
</Conclusion>
</Parallel>
Simplifying, the n*a1 terms cancel out:
D = Σ_{k=n+1}^{2n} Σ_{i=1}^{k−1} d_i - Σ_{i=1}^{n−1} (n − i) d_i
Now, let's break down the first sum Σ_{k=n+1}^{2n} Σ_{i=1}^{k−1} d_i.
For k from n+1 to 2n, the inner sum Σ_{i=1}^{k−1} d_i goes up to i = k−1, where k−1 can be as large as 2n−1.
But since our sequence is up to 2n−1 differences, that's okay.
Let me reindex the first sum:
Σ_{k=n+1}^{2n} Σ_{i=1}^{k−1} d_i = Σ_{i=1}^{2n-1} d_i Σ_{k= max(n+1, i+1)}^{2n} 1}
Wait, maybe that's a way to switch the order of summation.
Let's consider for each i, how many times does d_i appear in the sum?
For each d_i, it appears in the inner sum when k−1 >= i, so k >= i+1.
But k ranges from n+1 to 2n.
So the number of times d_i is summed is the number of k such that max(n+1, i+1) <= k <= 2n.
That is, for each i, the number of times d_i appears is 2n − max(n+1, i+1) + 1.
Hmm, let me compute that.
Let's think in parallel.
<Parallel>
<Goal>
<Outline>
1: Determine the frequency of term d_i in the sum Σ_{k=n+1}^{2n} Σ_{i=1}^{k−1} d_i for indices i ≤ n.
</Outline>
<Outline>
2: Determine the frequency of term d_i in the sum Σ_{k=n+1}^{2n} Σ_{i=1}^{k−1} d_i for indices i > n.
</Outline>
</Goal>
<Path>
1: For the case where i ≤ n, which is equivalent to i+1 ≤ n+1, the maximum value max(n+1, i+1) equals n+1. The count of terms for such an index i is calculated as 2n - (n+1) + 1, which simplifies to n.
</Path>
<Path>
2: In the scenario where i > n, equivalent to i+1 > n+1, the maximum value max(n+1, i+1) becomes i+1. Consequently, the number of terms corresponding to this index i is determined by the expression 2n - (i+1) + 1, resulting in 2n - i.
</Path>
<Conclusion>
After changing the summation order for Σ_{k=n+1}^{2n} Σ_{i=1}^{k−1} d_i, the term d_i occurs n times when i ≤ n and 2n - i times when i > n.
</Conclusion>
</Parallel>
Therefore, we can write:
Σ_{k=n+1}^{2n} Σ_{i=1}^{k−1} d_i = Σ_{i=1}^{n} d_i * (n) + Σ_{i=n+1}^{2n−1} d_i * (2n - i)
So this gives:
Σ_{k=n+1}^{2n} Σ_{i=1}^{k−1} d_i = n Σ_{i=1}^{n} d_i + Σ_{i=n+1}^{2n−1} (2n - i) d_i
Now, let's plug that back into D:
D = [n Σ_{i=1}^{n} d_i + Σ_{i=n+1}^{2n−1} (2n - i) d_i] - [Σ_{i=1}^{n−1} (n - i) d_i]
Let me write out the terms:
First term: n Σ_{i=1}^n d_i = n d1 + n d2 + ... + n d_{n}
Second term: Σ_{i=n+1}^{2n−1} (2n - i) d_i.
Let’s denote j = i - n (so j = 1 to n−1).
Then 2n - i = 2n - (n + j) = n - j.
So the second term is Σ_{j=1}^{n−1} (n - j) d_{n + j}
Third term: minus Σ_{i=1}^{n−1} (n - i) d_i.
Which is, again, Σ_{j=1}^{n−1} (n - j) d_j but with a negative sign.
So combining the terms:
D = [n d1 + n d2 + ... + n d_{n}] + [ (n -1) d_{n+1} + (n -2) d_{n+2} + ... +1 d_{2n−1} ) ] - [ (n -1) d1 + (n -2) d2 + ... +1 d_{n−1} ) ]
Wait, perhaps reorganizing the terms in D:
Let’s split the first term into the first n differences, each multiplied by n.
Then, for the first n−1 of these, we have n d_i - (n - i) d_i for i=1 to n−1.
But let's take it step by step.
Looking at D:
First term: n Σ_{i=1}^n d_i.
So that's n d1 + n d2 + ... + n d_{n-1} + n d_n.
Second term: Σ_{i=n+1}^{2n−1} (2n - i) d_i = (n -1) d_{n+1} + (n -2) d_{n+2} + ... + 1 d_{2n-1}
Third term: - Σ_{i=1}^{n−1} (n - i) d_i = - ( (n -1) d1 + (n -2) d2 + ... +1 d_{n−1} )
Now, now can we combine the terms:
Let's group terms by the index i of d_i.
Let's think in parallel.
<Parallel>
<Goal>
<Outline>
1: Determine the coefficient of d_i in D for 1 ≤ i ≤ n-1.
</Outline>
<Outline>
2: Determine the coefficient of d_n in D.
</Outline>
<Outline>
3: Determine the coefficient of d_i in D for n+1 ≤ i ≤ 2n-1.
</Outline>
</Goal>
<Path>
1: The coefficient for d_i in the expression D, when the index i ranges from 1 to n−1, is derived from the contributions of the first and third terms. This coefficient is calculated as the difference n minus (n - i), which simplifies to i.
</Path>
<Path>
2: When the index i equals n, the coefficient for d_n in D originates solely from the first term. The third term does not contribute because its summation index only goes up to n-1, resulting in a coefficient of n for d_n.
</Path>
<Path>
3: For indices i ranging from n+1 to 2n−1, the coefficients for d_i in D are determined by the second term. These coefficients form a sequence decreasing from n-1 down to 1, corresponding to i values from n+1 up to 2n-1.
</Path>
<Conclusion>
The coefficients for d_i in the expression D are found to be i for 1 ≤ i ≤ n-1, n for i = n, and 2n - i for n+1 ≤ i ≤ 2n-1 (yielding values n-1, n-2, ..., 1).
</Conclusion>
</Parallel>
So finally, D can be written as:
D = Σ_{i=1}^{n−1} i d_i + n d_n + Σ_{i=n+1}^{2n−1} (2n - i) d_i
But wait, in the second term Σ_{i=n+1}^{2n−1} (2n - i) d_i, we can relabel i as j = i - n.
Then j runs from 1 to n -1, and 2n - i = 2n - (n + j) = n - j.
So the coefficients there are (n - j) for j=1 to n-1.
So D equals:
Σ_{i=1}^{n−1} i d_i + n d_n + Σ_{j=1}^{n−1} (n - j) d_{n + j}
Which can be seen as:
Σ_{i=1}^{n−1} [i d_i + (n - i) d_{n + i}] + n d_n
So if I set i as 1 to n−1, each pair (d_i, d_{n +i}) contributes [i d_i + (n -i) d_{n + i}], and then the term n d_n.
Hmm, interesting structure.
Let me think if there's a way to apply Cauchy-Schwarz here.
The constraint is that Σ_{i=1}^{2n−1} d_i2 = 1 (since the sum of squares of differences is 1; the differences are exactly the d_i's).
Wait, but actually, the given constraint is Σ_{i=1}^{2n−1} d_i2 = 1.
Therefore, the vector (d1, d2, ..., d_{2n−1}) is a unit vector in R^{2n−1}.
Then D is a linear functional of this vector, so the maximum D subject to the constraint is the norm of the vector that defines this functional.
By Cauchy-Schwarz, the maximum value is the norm of the coefficient vector.
That's a key insight!
Since D is a linear combination of the d_i's with certain coefficients, and the d_i's are constrained by having their squared sum equal to 1, then the maximum D is equal to the Euclidean norm of the coefficient vector.
Because the maximum of the linear form c·d subject to ||d||=1 is ||c||.
Therefore, if D = Σ_{i=1}^{2n−1} c_i d_i}, where c_i are coefficients, then the maximum D is sqrt(Σ c_i2).
Therefore, all I need to do is compute the norm of the coefficients of D in terms of the d_i's.
From the expression above, the coefficients c_i for each d_i in D are as follows:
- For i=1 to n−1: c_i = i
- For i=n: c_n = n
- For i=n+1 to 2n−1: let j = i - n, j=1 to n−1⇒ c_i = n - j
But let me check that.
For i =n+1, j=1, c_{n+1}=n -1
For i =n+2, j=2, c_{n+2}=n -2
...
For i=2n−1, j= n−1, c_{2n−1}=1
So coefficients for i=1 to 2n−1:
From i=1 to i=n-1: c_i = i
For i =n: c_i = n
From i=n+1 to i=2n−1: c_i= n - (i -n) )= 2n -i
So we can also note that the coefficients c_i for i=1 to n are:
i for i=1,...,n-1, and n for i=n.
And for i=n+1 to 2n−1: c_i=2n−i.
Wait, for example, i =n+1: c_i=2n− (n+1)=n-1; i=n+2: c_i=2n− (n+2)=n-2 etc.
So yes, in general for i> n, c_i=2n -i.
Therefore, our coefficient vector c is the concatenation of:
[1,2, ...,n−1, n, n−1, n−2, ...,1]
Wait, note for i from 1 to n−1: coefficients are 1,2,...,n−1
Then i =n: coefficient n
Then i from n+1 to 2n−1 (from j=1 to j=n−1): coefficients (n−1), (n−2),...,1
But total terms is (n−1) +1 + (n−1)=2n−1, which checks out.
So our coefficient vector c is:
[1, 2, 3, ..., n−1, n, n−1, n−2, ..., 2,1]
But the total length is 2n−1, so we start from 1 up to n, then down to 1 again, but since we start from n−1 when counting down.
But that's actually forming a symmetric structure, except that the middle term is n.
Let's think in parallel.
<Parallel>
<Goal>
<Outline>
1: Determination of the coefficient vector pattern for n=2 and n=3.
</Outline>
<Outline>
2: Determination of the coefficient vector pattern for n=4.
</Outline>
</Goal>
<Path>
1: For n=3, which corresponds to 2n−1=5 terms, the coefficient pattern is exemplified by [1, 2, 3, 2,1]. The detailed derivation for n=3 specifies coefficients of 1 and 2 for i=1 and i=2 (representing n−1=2 terms), a coefficient of 3 for i=3 (where i=n), and coefficients of 2 and 1 for i=4 and i=5 (representing j=1 and j=2 for the decreasing part).
This derivation confirms the vector [1,2,3,2,1] for n=3.
For n=2, with 2n−1=3 terms, the coefficient vector is [1,2,1].
The coefficient for i=1 is 1.
The coefficient for i=2 is 2.
The coefficient for i=3 is 1.
These examples show that the coefficients form a palindromic sequence that increases to n and then decreases, with n being the central term.
The middle term is n irrespective of n's parity; when n=3 (odd), the middle term is 3.
The overall sequence of 2n−1 terms is always odd, ensuring symmetry with the peak at the nth position.
</Path>
<Path>
2: For n=4, the coefficient vector is [1,2,3,4,3,2,1]. This case involves 2n−1=7 terms, with the sequence values starting at 1, increasing to 4, and then decreasing back to 1. The derivation for n=4 (with 2n−1=7 terms) indicates that for i=1, 2, and 3, the coefficients are 1, 2, and 3, respectively.
The coefficient for i=4 is 4.
For i=5, 6, and 7, the coefficients are 3, 2, and 1, respectively.
This confirms the coefficient vector is [1,2,3,4,3,2,1] for n=4.
</Path>
<Conclusion>
The derived coefficients consistently form a symmetric sequence [1, 2, ..., n-1, n, n-1, ..., 2, 1], peaking at n, as confirmed for n=2, n=3, and n=4.
</Conclusion>
</Parallel>
So the coefficients form a "symmetric pyramid" shaped vector with the maximum at the center.
Therefore, the squared norm of this coefficient vector is the sum of squares of these coefficients.
Therefore, to compute ||c||, we can compute 2*(12 + 22 + ... + (n−1)2) + n2
Because the coefficients before n are symmetric, so for n=4: sum from i=1 to 3:1,2,3, then 4, then 3,2,1.
So the squared norm is 2*(12+22+32) +42.
Thus, in general:
||c||2 = 2*Σ_{k=1}^{n−1} k2 + n2
We can compute this:
Firstly, the sum Σ_{k=1}^m k2 is m(m +1)(2m +1)/6.
Thus, Σ_{k=1}^{n−1} k2= (n−1)n(2n−1)/6.
Therefore, ||c||2= 2*( (n−1)n(2n−1)/6 ) + n2
Simplify this:
= (2(n−1)n(2n−1))/6 + n2
= ( (n−1)n(2n−1) ) /3 + n2
Let’s factor out n:
= n [ (n−1)(2n−1)/3 + n ]
Compute inside the brackets:
(n−1)(2n−1)/3 +n = [ (n−1)(2n−1) +3n ] /3
= [2n2 -n -2n +1 +3n]/3
Simplify numerator:
2n2 -n -2n +1 +3n =2n2 +0n +1
Wait, let's check:
(n−1)(2n−1)=2n2 -n -2n +1=2n2 -3n +1
Then adding 3n:
2n2 -3n +1 +3n=2n2 +1
Thus, ||c||2= n*(2n2 +1)/3
Hence, the norm is sqrt( n*(2n2 +1)/3 )
Therefore, according to the Cauchy-Schwarz inequality, the maximum value of D is equal to the norm of the coefficient vector c, which is sqrt(n(2n2 +1)/3).
So that should be the answer.
Wait, let me check this with a small n.
Let's think in parallel.
<Parallel>
<Goal>
<Outline>
1: Verification of the formula sqrt(n(2n^2+1)/3) for n=1 by direct calculation.
</Outline>
<Outline>
2: Verification of the formula sqrt(n(2n^2+1)/3) for n=2, including direct calculation of D, maximization via Cauchy-Schwarz, comparison with the formula, and confirmation of achievability.
</Outline>
<Outline>
3: Verification of the formula sqrt(n(2n^2+1)/3) for n=3 by calculating the coefficient vector's norm and comparing it with the formula.
</Outline>
<Outline>
4: Confirmation of the achievability of the maximum value derived from ||c|| using the Cauchy-Schwarz equality condition.
</Outline>
</Goal>
<Path>
1: For n=1, the sequence has two terms, a1 and a2, and the constraint is (a2 - a1)^2 = 1. The difference to maximize, D, is a2 - a1. From the constraint, the maximum D is directly found to be sqrt(1) = 1. Evaluating the general formula sqrt(n(2n^2+1)/3) for n=1 gives sqrt(1*(2*1^2 + 1)/3), which simplifies to sqrt(3/3) and also equals 1, confirming the formula for this case.
</Path>
<Path>
2: For n=2, the sequence has 2n=4 terms, leading to 2n-1=3 differences: d1, d2, d3. The coefficient vector for D is determined to be [1,2,1]. The squared norm of this vector is 1^2 + 2^2 + 1^2 = 6. Thus, its norm is sqrt(6). The general formula sqrt(n(2n^2+1)/3) evaluated at n=2 gives sqrt(2*(2*4+1)/3) = sqrt(2*9/3) = sqrt(6), which matches the calculated norm.
To verify this directly, the sequence terms are a1, a2, a3, a4, with differences d1=a2-a1, d2=a3-a2, d3=a4-a3, under the constraint d1^2+d2^2+d3^2=1.
The expression to maximize is D = (a3+a4) - (a1+a2).
By expressing a_k in terms of a1 and the differences (a2=a1+d1, a3=a1+d1+d2, a4=a1+d1+d2+d3), D can be rewritten as [(a1+d1+d2) + (a1+d1+d2+d3)] - [a1 + (a1+d1)].
This expression for D simplifies to (2a1+2d1+2d2+d3) - (2a1+d1), which equals d1+2d2+d3.
The coefficients of the differences (1, 2, 1) in this form of D confirm the coefficient vector [1,2,1] and thus the maximum D of sqrt(6) by the Cauchy-Schwarz inequality.
The achievability of this maximum is demonstrated by setting each d_i proportional to its coefficient c_i, specifically d_i = c_i / sqrt(6); thus, d1=1/sqrt(6), d2=2/sqrt(6), and d3=1/sqrt(6).
This choice satisfies the constraint, as Σd_i^2 = (1^2+2^2+1^2)/(sqrt(6))^2 = 6/6 = 1.
With these values, D becomes 1*(1/sqrt(6)) + 2*(2/sqrt(6)) + 1*(1/sqrt(6)) = (1+4+1)/sqrt(6) = 6/sqrt(6) = sqrt(6).
This confirms that the maximum value sqrt(6) is indeed achievable and consistent with the formula's prediction for n=2.
</Path>
<Path>
3: For n=3, evaluating the formula sqrt(n(2n^2+1)/3) yields sqrt(3*(2*3^2+1)/3), which simplifies to sqrt(3*19/3) = sqrt(19). The squared norm of the coefficient vector, ||c||^2, is then determined for the n=3 case. The result from this calculation aligns with the formula's output. The verification for n=2 was also successful. These consistencies across specific cases (n=1, n=2, n=3) reinforce confidence in the general formula.
Let's think in parallel.
<Parallel>
<Goal>
<Outline>
3.1: Determination of the squared norm of the coefficient vector for n=3 by direct calculation.
</Outline>
<Outline>
3.2: Calculation of the result for n=3 using the derived formula.
</Outline>
</Goal>
<Path>
3.1: For n=3, the coefficient vector is [1,2,3,2,1]. The sum of the squares of its components is 1^2 + 2^2 + 3^2 + 2^2 + 1^2 = 1 + 4 + 9 + 4 + 1 = 19. Thus, the norm of the coefficient vector is sqrt(19).
</Path>
<Path>
3.2: The derived formula sqrt(n(2n^2+1)/3) for n=3 gives sqrt(3*(2*3^2+1)/3) = sqrt(19).
</Path>
<Conclusion>
The direct calculation of the squared norm of the coefficient vector [1,2,3,2,1] for n=3 results in 19, corresponding to a norm of sqrt(19). The formula sqrt(n(2n^2+1)/3) also produces sqrt(19) for n=3, showing agreement.
</Conclusion>
</Parallel>
The formula is thus considered confirmed for these specific instances.
</Path>
<Path>
4: The maximum possible value for D is sqrt(n(2n^2+1)/3), alternatively expressible as sqrt((2n^3+n)/3). The problem statement specifies that the sequence terms are real numbers. The achievability of this maximum is guaranteed by the equality condition of the Cauchy-Schwarz inequality. This condition occurs when the vector of differences (d_i) is proportional to the coefficient vector (c_i), meaning d_i = k*c_i for some constant k. To satisfy the constraint Σd_i^2 = 1, the constant k must be 1/||c||.
Consequently, choosing d_i = c_i / ||c|| allows D to attain its maximum value, which is ||c||.
This confirms that the derived norm ||c|| represents the maximum achievable value for D.
</Path>
<Conclusion>
The formula for the maximum difference, Max(D) = sqrt(n(2n^2+1)/3), has been verified for n=1, n=2, and n=3 by direct calculations and comparison with the norm of the derived coefficient vector. The achievability of this maximum value is established by the equality condition of the Cauchy-Schwarz inequality, which is met when the differences d_i are set proportional to their corresponding coefficients c_i.
</Conclusion>
</Parallel>
Therefore, the answer is sqrt( n*(2n2 +1)/3 ), or sqrt( (2n3 +n)/3 )
But perhaps this expression can be simplified further.
Let's factor numerator:
Let's think in parallel.
<Parallel>
<Goal>
<Outline>
1: The final answer expressed with a factored numerator within the square root.
</Outline>
<Outline>
2: The final answer expressed with an expanded numerator within the square root.
</Outline>
</Goal>
<Path>
1: The expression 2n³ + n can be factored as n(2n² + 1), leading to the form sqrt(n(2n² + 1)/3) for the final answer.
</Path>
<Path>
2: The final answer can also be expressed using the expanded numerator as sqrt((2n³ + n)/3).
</Path>
<Conclusion>
The maximum value of the difference is represented by two equivalent expressions: sqrt(n(2n² + 1)/3) using a factored numerator, and sqrt((2n³ + n)/3) using an expanded numerator.
</Conclusion>
</Parallel>
It may not simplify more, so that seems like the answer.
Alternatively, perhaps they want it as sqrt(n(2n2 +1)/3).
But both are equivalent.
Therefore, boxed, the answer is \boxed{ \sqrt{ \dfrac{n(2n^2 + 1)}{3} } }.
**Final Answer**
\boxed{ \sqrt{ \dfrac{n(2n^2 + 1)}{3} } }
</Think>